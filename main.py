from fastapi import FastAPI, HTTPException, Request
import openai
import os
from dotenv import load_dotenv
from supabase import create_client
import json

load_dotenv()

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å—Ä–µ–¥—ã
openai.api_key = os.getenv("OPENAI_API_KEY")
SUPABASE_URL = os.getenv("SUPABASE_URL")
SUPABASE_KEY = os.getenv("SUPABASE_SERVICE_KEY")

# –ö–ª–∏–µ–Ω—Ç Supabase
supabase = create_client(SUPABASE_URL, SUPABASE_KEY)

app = FastAPI()

@app.post("/embed-hook")
async def embed_hook(request: Request):
    try:
        input_data = await request.json()
        print("üî• Supabase payload:", input_data)

        # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω—É–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ JSON
        record = input_data.get('record', {})
        profile_id = record.get('_id')
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –ø–æ–ª—è –¥–ª—è embedding
        about_me_text = record.get('about_me_text', '')
        keyachievementssuccesses_text = record.get('keyachievementssuccesses_text', '')
        current_role_text = record.get('current_role_text', '')
        
        # –°–æ–±–∏—Ä–∞–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ OpenAI
        text = f"{about_me_text} {keyachievementssuccesses_text} {current_role_text}"
        
        if not profile_id or not text.strip():
            raise HTTPException(status_code=400, detail="Missing 'id' or 'text'. Make sure both are provided.")

        # –ó–∞–ø—Ä–æ—Å –∫ OpenAI –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è embedding
        response = openai.Embedding.create(
            model="text-embedding-ada-002",  # –∏–ª–∏ –¥—Ä—É–≥–æ–π –Ω—É–∂–Ω—ã–π –≤–∞–º –≤–∞—Ä–∏–∞–Ω—Ç –º–æ–¥–µ–ª–∏
            input=text
        )

        embedding = response['data'][0]['embedding']
        print("‚úÖ Embedding generated successfully")

        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö Supabase
        supabase.table("expert_profile").update({"embedding": embedding}).eq("_id", profile_id).execute()

        return {"status": "success", "_id": profile_id}

    except Exception as e:
        print("‚ùå EXCEPTION:", str(e))
        raise HTTPException(status_code=500, detail=str(e))
