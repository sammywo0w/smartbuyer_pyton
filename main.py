from fastapi import FastAPI, HTTPException, Request
import openai
import os
from dotenv import load_dotenv
from supabase import create_client

load_dotenv()

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å—Ä–µ–¥—ã
openai.api_key = os.getenv("OPENAI_API_KEY")
SUPABASE_URL = os.getenv("SUPABASE_URL")
SUPABASE_KEY = os.getenv("SUPABASE_SERVICE_KEY")

# –ö–ª–∏–µ–Ω—Ç Supabase
supabase = create_client(SUPABASE_URL, SUPABASE_KEY)

app = FastAPI()

@app.post("/embed-hook")
async def embed_hook(request: Request):
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∑–∞–ø—Ä–æ—Å–∞
        input_data = await request.json()
        print("üî• Supabase payload:", input_data)

        record = input_data.get('record', {})
        about_me_text = record.get('about_me_text', '')
        keyachievementssuccesses_text = record.get('keyachievementssuccesses_text', '')
        current_role_text = record.get('current_role_text', '')

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è embedding
        combined_text = f"{about_me_text} {keyachievementssuccesses_text} {current_role_text}"

        # –ü–æ–ª—É—á–∞–µ–º embedding –æ—Ç OpenAI
        response = openai.Embedding.create(
            model="text-embedding-ada-002",  # –ù–æ–≤—ã–π ID –º–æ–¥–µ–ª–∏ –¥–ª—è embedding
            input=combined_text
        )

        # –ò–∑–≤–ª–µ–∫–∞–µ–º embedding
        embedding = response['data'][0]['embedding']
        print("‚úÖ Embedding generated successfully")

        # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ Supabase
        profile_id = record.get('_id')
        if profile_id:
            supabase.table("expert_profile").update({"embedding": embedding}).eq("_id", profile_id).execute()

        return {"status": "success", "_id": profile_id}

    except Exception as e:
        print("‚ùå EXCEPTION:", str(e))
        raise HTTPException(status_code=500, detail=str(e))
