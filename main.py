from fastapi import FastAPI, HTTPException, Request
import openai
import os
from dotenv import load_dotenv
from supabase import create_client

load_dotenv()

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å—Ä–µ–¥—ã
openai.api_key = os.getenv("OPENAI_API_KEY")
SUPABASE_URL = os.getenv("SUPABASE_URL")
SUPABASE_KEY = os.getenv("SUPABASE_SERVICE_KEY")

# –ö–ª–∏–µ–Ω—Ç Supabase
supabase = create_client(SUPABASE_URL, SUPABASE_KEY)

app = FastAPI()

@app.post("/embed-hook")
async def embed_hook(request: Request):
    try:
        input_data = await request.json()
        print("üî• Supabase payload:", input_data)

        # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω—É–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –∑–∞–ø—Ä–æ—Å–∞
        text = input_data.get("text", "")
        profile_id = input_data.get("id")

        if not profile_id or not text:
            raise ValueError(f"Missing 'id' or 'text'. Got id: {profile_id}, text: {text}")

        # –ó–∞–ø—Ä–æ—Å –∫ OpenAI –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è embedding
        response = openai.embeddings.create(
            model="text-embedding-ada-002",  # –ú–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â—É—é –º–æ–¥–µ–ª—å
            input=text
        )

        embedding = response['data'][0]['embedding']
        print("‚úÖ Embedding generated successfully")

        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö Supabase
        supabase.table("expert_profile").update({"embedding": embedding}).eq("_id", profile_id).execute()

        return {"status": "success", "_id": profile_id}

    except Exception as e:
        print("‚ùå EXCEPTION:", str(e))
        raise HTTPException(status_code=500, detail=str(e))
